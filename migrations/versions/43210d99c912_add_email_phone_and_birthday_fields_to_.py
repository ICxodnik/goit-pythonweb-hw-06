"""Add email, phone and birthday fields to students table

Revision ID: 43210d99c912
Revises: 0a65b24102e4
Create Date: 2025-07-13 00:13:00.458035

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '43210d99c912'
down_revision: Union[str, Sequence[str], None] = '0a65b24102e4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add columns as nullable first
    op.add_column('students', sa.Column('email', sa.String(length=100), nullable=True))
    op.add_column('students', sa.Column('phone', sa.String(length=20), nullable=True))
    op.add_column('students', sa.Column('birthday', sa.DateTime(), nullable=True))
    
    # Update existing records with generated email addresses
    from faker import Faker
    import random
    fake = Faker()
    
    # Get existing student IDs
    connection = op.get_bind()
    result = connection.execute(sa.text("SELECT id FROM students WHERE email IS NULL"))
    student_ids = [row[0] for row in result]
    
    # Generate unique emails for existing students
    for student_id in student_ids:
        email = fake.unique.email()
        connection.execute(
            sa.text("UPDATE students SET email = :email WHERE id = :id"),
            {"email": email, "id": student_id}
        )
    
    # Now make email NOT NULL and add unique constraint
    op.alter_column('students', 'email', nullable=False)
    op.create_unique_constraint(None, 'students', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'students', type_='unique')
    op.drop_column('students', 'birthday')
    op.drop_column('students', 'phone')
    op.drop_column('students', 'email')
    # ### end Alembic commands ###
